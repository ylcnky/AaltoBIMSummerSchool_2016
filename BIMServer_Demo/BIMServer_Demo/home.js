// This file is the demo of how an IFC file can be uploaded to opensource BIMServer// STEP 1 LOGIN BIMSERVER  // Assume that you have the working instance of BIMServer  // Your username is "admin@bimserver.org"  // Your password is "admin"function Login() {    var username = "admin@bimserver.org" // You can change username based on your configuration    var password = "admin" // You can change password based on your configuration    var token // This variable is empty now. But after your login, a new token will be assigned. This token will be used for other functions.    var data = {      "request": {        "interface": "AuthInterface",        "method": "login",        "parameters": {          "username": username,          "password": password        }      }    }    var successCallbackLogin = function(data) {        console.log("success");        window.test = data;        token = JSON.stringify(data.response.result) // Do you remember the token variable above ??        $("#token").text(token);    }    $.ajax({        url: "http://localhost:8082/json",        method: "POST",        data: JSON.stringify(data),        success: successCallbackLogin    });}// STEP 2 CREATE A NEW PROJECT  // You have logged-in to the BIMServer. The unique token is the proof of it.  // Before you upload your IFC model to BIMServer, you have to create a new projectfunction CreateProject() {      var schema = "ifc2x3tc1" // We are uploading IFC2x3 version      var projectName = "BIMSummer_School"      var dataLogin = {        "token": "37185ef464b685f7b75cdae3226f08f3bd34655c72c7782138d83b81085cd2f29c226d7692cc2a9dc8df07aeacf82a92", // This token comes from the variable we put in the beginning.        "request": {          "interface": "ServiceInterface",          "method": "addProject",          "parameters": {            "projectName": projectName, // We defined the projectName at line 40            "schema": schema // We defined the schema at line 39          }        }      }      var successCallbackAddProject = function(dataLoginResult) {        console.log("success");        window.test = dataLogin;        var name = JSON.stringify(dataLoginResult.response.result.name)        console.log(name);        $("#name").text("Project Name: "+name);        var id = JSON.stringify(dataLoginResult.response.result.oid)        $("#projectId").text("Project Id Number: "+id);    }    $.ajax({        url: "http://localhost:8082/json",        method: "POST",        data: JSON.stringify(dataLogin),        success: successCallbackAddProject    });}// STEP 3 INTRODUCE THE FILE FORMAT (Deserializer) TO BIMSERVER  // Before uploading your IFC, you should introduce the file format to BIMServer  // By default, there are many file formats are supported for import/export. Therefore the "ifc" format should be introduced.  function Deserializer() {    var extension = ".ifc";    var poid = "" // Project number should be entered here.    var dataDeserializer = {      "token": "3f791f35d4b5963d240180b42b20a4c4ccea601d80d49fc51aac6fdff13a0ead9c226d7692cc2a9dc8df07aeacf82a92",      "request": {        "interface": "ServiceInterface",        "method": "getSuggestedDeserializerForExtension",        "parameters": {          "extension": extension,          "poid": poid        }      }    }    var successCallbackDeserializer = function(dataDeserializerResult) {            console.log("success");            window.test = dataDeserializer;            var name = JSON.stringify(dataDeserializerResult.response.result.name)            console.log(name);            $("#nameDeserializer").text("File Format: "+name);            var id = JSON.stringify(dataDeserializerResult.response.result.oid)            $("#idDeserializer").text("File Format Id Number: "+ id);        }        $.ajax({            url: "http://localhost:8082/json",            method: "POST",            data: JSON.stringify(dataDeserializer),            success: successCallbackDeserializer        });  }// STEP 4 UPLOAD IFC FILE TO BIMSERVER AND MAKE IT READY TO PROCESS AND RENDER 3D  // Due to complex process, this step will be performed on the API Console.html page// STEP 5 PROCESS IFC FILE AND RENDER THE 3D MODEL  // At the end of the STEP 4 we obtained an Progress Id number.  // We will pass the this number to BIMServer to process upload and render the 3D modelfunction getProgress() {    var progressId = 17    var progressData = {    "token": "06b51496e04e3d13c46ebe05998ea398646eb6586d800cb6770e155068796c9f9c226d7692cc2a9dc8df07aeacf82a92",    "request": {      "interface": "NotificationRegistryInterface",      "method": "getProgress",      "parameters": {        "topicId": progressId      }    }  }  var successCallbackProgress = function(progressData) {    var state = JSON.stringify(progressData.response.result.state)    var title = JSON.stringify(progressData.response.result.title)    $("#state").text("File Upload Status: "+ state);    $("#title").text("Uploaded File Action: "+ title);  }  $.ajax({    url: "http://localhost:8082/json",    method: "POST",    data: JSON.stringify(progressData),    success: successCallbackProgress      });}$("#login").click(function(){  Login()})$("#createProject").click(function(){  CreateProject()})$("#serializer").click(function(){  Deserializer()})$("#upload").click(function(){  getProgress()})